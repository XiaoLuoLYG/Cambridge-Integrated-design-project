moodle instructions: https://www.vle.cam.ac.uk/mod/page/view.php?id=13110541 step 10 additional stuff:
	-> ensure arguments --baud 115200 --before no_reset
Bluetooth Serial Terminal: https://www.microsoft.com/en-us/p/bluetooth-serial-terminal/9wzdncrdfst8#activetab=pivot:overviewtab
Arduino IDE serial monitor: ensure upload rate is set to 115200 baud (bottom right)


1. open main_Bluetooth/main_Bluetooth.ino 
2. ensure that ESP32 board package is installed. If it isn't, way to get ESP32 package:
   https://randomnerdtutorials.com/installing-the-esp32-board-in-arduino-ide-windows-instructions/
3. upload main_Bluetooth.ino 
4. type "bluetooth and other device settings" in the start menu to open the bluetooth settings
5. click "Add Bluetooth or other device" and search for "M112" and add it (this is the bluetooth name of the arduino)
6. return to "bluetooth and other device settings" again and click "More bluetooth options"
7. open the tab "COM Ports" and search for the outgoing COM port with name "M112 'ESP32SPP'". Note the port number.
8. open BT_handler.py and edit BT_PORT to the port number found earlier.
9. write python in the format shown in test.py
	- entire code should be nested in if __name__ == "__main__":
10. to see data received by arduino over bluetooth, open Serial Monitor and set baud rate to 115200.

How this works:
The while a.repeat() loop will keep running, at a frequency set by a.repeat. This is better than just time.sleep(), as a.repeat() 
ensures an exact frequency of looping, whereas time.sleep() may lead to unstable frequency dependent on the time it takes to run 
the code in the loop. When setup() is called, a bluetooth listener instance is created and constantly listens in a parallel process
for incoming data over bluetooth. Create a  BT_comm() class to read/write from the bluetooth listener.
